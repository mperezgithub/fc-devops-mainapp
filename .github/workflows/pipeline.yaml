name: CI/CD - PetClinic Java Maven

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test-analyze:
    name: Build, Test & Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1    

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    - name: Run Tests (JUnit)
      run: mvn test

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze with Sonar
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=amporg_fc-devops-mainapp

    - name: Build App
      run: mvn clean package -DskipTests

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to AWS ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: |
        docker build -t petclinic-app .
        docker tag petclinic-app:latest ${{ secrets.ECR_URL }}:latest

    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.ECR_URL }}:latest

    - name: Update GitOps repo with new image tag
      run: |
        TAG=${GITHUB_SHA::7}
        echo "Using tag: ${TAG}"

        git clone https://x-access-token:${{ secrets.GITOPS_TOKEN }}@github.com/mperezgithub/fc-devops-infraestructure-automation.git
        cd fc-devops-infraestructure-automation/k8s/kustomize/base/petclinic

        sed -i "s|image: .*|image: ${{ secrets.ECR_URL }}:${TAG}|" petclinic-deployment.yaml

        git config user.name "CI Bot"
        git config user.email "ci-bot@github.com"
        git add petclinic-deployment.yaml
        git commit -m "Update petclinic image to ${TAG}"
        git push origin main
