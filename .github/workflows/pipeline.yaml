name: CI/CD - PetClinic Java Maven

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test-analyze:
    name: Build, Test & Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven

    - name: Run Tests (JUnit)
      run: mvn test

    - name: Static Analysis with SonarQube
      env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       run: |
         mvn verify sonar:sonar \
           -Dsonar.projectKey=fc-devops-mainapp\
           -Dsonar.organization=Angel Mario\
           -Dsonar.host.url=${{ secrets.SONAR_URL }} \
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Build App
      run: mvn clean package -DskipTests

  # docker-deploy:
  #   name: Docker Build & Push to JFrog
  #   runs-on: ubuntu-latest
  #   needs: build-test-analyze

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Log in to Docker Registry (JFrog)
  #     run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ secrets.JFROG_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

  #   - name: Build Docker Image
  #     run: |
  #       docker build -t ${{ secrets.JFROG_REGISTRY }}/team-cordoba/petclinic:1.0.0 .

  #   - name: Push Docker Image
  #     run: |
  #       docker push ${{ secrets.JFROG_REGISTRY }}/team-cordoba/petclinic:1.0.0
